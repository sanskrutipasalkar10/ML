pip install pandas mlxtend matplotlib scikit-learn

1)
# Importing necessary libraries
import pandas as pd
from mlxtend.frequent_patterns import apriori
from mlxtend.frequent_patterns import association_rules

# Load the dataset
# Assume the dataset is structured with one transaction per row
# and items are separated by commas or have a binary matrix format
df = pd.read_csv('groceries.csv')

# Data Preprocessing (transform dataset into a format suitable for apriori)
# Convert transactions into a one-hot encoded dataframe
basket = df['items'].str.get_dummies(sep=',')  # Replace with your actual column name

# Apply the apriori algorithm
frequent_itemsets = apriori(basket, min_support=0.25, use_colnames=True)

# Display frequent itemsets
print(frequent_itemsets)

# Generate association rules
rules = association_rules(frequent_itemsets, metric='lift', min_threshold=1)
print(rules)


2.

import pandas as pd
import matplotlib.pyplot as plt
from sklearn import preprocessing

iris = pd.read_csv('C:\\Users\\sanskruti\\OneDrive\\Desktop\\symsc prac\\SEM 3 ML\\iris.csv') 

le = preprocessing.LabelEncoder()
iris['species'] = le.fit_transform(iris['species'])

plt.figure(figsize=(10, 6))
colors = ['red', 'green', 'blue']

for i, species in enumerate(iris['species'].unique()):
    subset = iris[iris['species'] == species]
    plt.scatter(subset['sepal_length'], subset['sepal_width'], 
                color=colors[i], label=f'Species {species}')

plt.title('Scatter Plot for Iris Dataset')
plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.legend()
plt.show()